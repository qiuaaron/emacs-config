#contributor : Aaron , generated by script from template provided by Xilinx
#name : V5_FIFO36
#key:V5_FIFO36
# --

FIFO36 #(
   .SIM_MODE("SAFE"),  // Simulation: "SAFE" vs. "FAST", see "Synthesis and Simulation Design Guide" for details
   .ALMOST_FULL_OFFSET(13'h0080),    // Sets almost full threshold
   .ALMOST_EMPTY_OFFSET(13'h0080),   // Sets the almost empty threshold
   .DATA_WIDTH(4),                   // Sets data width to 4, 9, 18 or 36
   .DO_REG(1),                       // Enable output register (0 or 1)
                                     //   Must be 1 if EN_SYN = "FALSE"
   .EN_SYN("FALSE"),                 // Specifies FIFO as Asynchronous ("FALSE") 
                                     //   or Synchronous ("TRUE")
   .FIRST_WORD_FALL_THROUGH("FALSE") // Sets the FIFO FWFT to "TRUE" or "FALSE" 
) U_FIFO36 (
   .ALMOSTEMPTY(ALMOSTEMPTY), // 1-bit almost empty output flag
   .ALMOSTFULL(ALMOSTFULL),   // 1-bit almost full output flag
   .DO(DO),                   // 32-bit data output
   .DOP(DOP),                 // 4-bit parity data output
   .EMPTY(EMPTY),             // 1-bit empty output flag
   .FULL(FULL),               // 1-bit full output flag
   .RDCOUNT(RDCOUNT),         // 13-bit read count output
   .RDERR(RDERR),             // 1-bit read error output
   .WRCOUNT(WRCOUNT),         // 13-bit write count output
   .WRERR(WRERR),             // 1-bit write error
   .DI(DI),                   // 32-bit data input
   .DIP(DIP),                 // 4-bit parity input
   .RDCLK(RDCLK),             // 1-bit read clock input
   .RDEN(RDEN),               // 1-bit read enable input
   .RST(RST),                 // 1-bit reset input
   .WRCLK(WRCLK),             // 1-bit write clock input
   .WREN(WREN)                // 1-bit write enable input
);   

